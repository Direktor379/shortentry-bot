from fastapi import FastAPI, Request
import requests
import os
from dotenv import load_dotenv
from openai import OpenAI

# üß† GPT –ª–æ–≥—ñ–∫–∞ + Telegram —Å–∏–≥–Ω–∞–ª
load_dotenv()
app = FastAPI()

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
client = OpenAI(api_key=OPENAI_API_KEY)

def send_message(text: str):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {"chat_id": CHAT_ID, "text": text}
    requests.post(url, data=data)

def ask_gpt(signal: str):
    prompt = f"""
    –Ñ —Å–∏–≥–Ω–∞–ª –Ω–∞ SHORT. –ü–æ—Ç–æ—á–Ω–∏–π —Ç–µ–∫—Å—Ç —Å–∏–≥–Ω–∞–ª—É: "{signal}"
    –í–∏–∑–Ω–∞—á —á–∏ –≤–∞—Ä—Ç–æ –≤—Ö–æ–¥–∏—Ç–∏ –≤ –ø–æ–∑–∏—Ü—ñ—é. –í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ –ª–∏—à–µ –æ–¥–Ω—ñ—î—é –∑ —Ç—Ä—å–æ—Ö:
    - SHORT
    - BOOSTED_SHORT
    - SKIP
    """
    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢–∏ —Ç—Ä–µ–π–¥–∏–Ω–≥ –∞–Ω–∞–ª—ñ—Ç–∏–∫. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –ª–∏—à–µ: SHORT, BOOSTED_SHORT –∞–±–æ SKIP."},
                {"role": "user", "content": prompt.strip()}
            ]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        return f"GPT error: {e}"

@app.post("/webhook")
async def webhook(req: Request):
    try:
        body = await req.body()
        signal = body.decode("utf-8").strip()
        gpt_response = ask_gpt(signal)
        send_message(f"üì© GPT-–≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Å–∏–≥–Ω–∞–ª '{signal}': {gpt_response}")
        return {"ok": True}
    except Exception as e:
        send_message(f"‚ùå –ü–æ–º–∏–ª–∫–∞ Webhook: {e}")
        return {"error": str(e)}






